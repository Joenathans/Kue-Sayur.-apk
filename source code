#include<stdio.h> 
#include<glut.h> 
#include<math.h> 
#define pi 3.142857 

int c = 0, d = 0, left = 0, right = 0;
int m = 0, j = 1, flag1 = 0, l = 1, flag2 = 0, n = 0, score = 0, count = 1;

// Initialization function 
void myInit(void)
{
	// Reset warna latar jadi putih (rgb) 
	glClearColor(1.0, 1.0, 1.0, 0.0);

	// warna merah ( RGB model)  
	glColor3f(1.0f, 0.0f, 0.0f);

	//mengatur lebar titi
	glPointSize(2.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();

	//mengatur ukuran layar tampil x, y 
	gluOrtho2D(-620.0, 620.0, -340.0, 340.0);
}

// keyboard function : ketika dipencet
void keyboard(unsigned char key, int x, int y)
{
	left = -200 + 200 * (d - c);
	right = 200 + 200 * (d - c);

	// if leftmost index of window is hit 
	// then rectangle will not move to left on furthure pressing of b 
	// only it will move to right on pressing n 
	if (left == -600)
	{
		// '110' -> Ascii value of 'n' 
		// so d is incremented when n is pressed 
		if (key == 110)
			d++;
	}
	// if rightmost index of window is hit 
	// then rectangle will not move to right on furthure pressing of n 
	// only it will move to left on pressing b 
	else if (right == 600)
	{
		// '98' -> Ascii value of 'b' 
		// so c is incremented when b is pressed 
		if (key == 98)
			c++;
	}
	// when rectangle is in middle, then it will move into both 
	// direction depending upon pressed key 
	else
	{
		if (key == 98)
			c++;
		if (key == 110)
			d++;
	}
	glutPostRedisplay();
}

void myDisplay(void)
{
	// x dan y menjaga lingkaran
	int x, y, k;
	// membuat gerakan dari bola
	for (k = 0; k <= 400; k += 5)
	{
		glClear(GL_COLOR_BUFFER_BIT);
		glBegin(GL_LINE_STRIP);
		// i menjaga sudut 
		float i = 0;
		glColor3i(21, 5, 13);

		//  m menunjukkan gerak vertikal 
		//  n gerak horizontal
		m = m + 6;
		n = n + 4;
		// menggambar lingkaran pada posisi (0,12)
		while (i <= 2 * pi)
		{
			y = 12 + 20 * cos(i);
			x = 20 * sin(i);
			i = i + 0.1;
			// flag1 bernilai 0 untuk menunjukkan arah gerak keatas dan 1 arah gerak kebawah 
			if (m == 288 && flag1 == 0)
			{
				j = -1;
				m = -288;
				flag1 = 1;
				score++;
			}
			if (m == 288 && flag1 == 1)
			{
				j = 1;
				m = -288;
				flag1 = 0;
			}
			// flag2 bernilai 0 untuk nunjukin arah gerak kekanan dan 1 untuk arah gerak kekiri 
			if (n == 580 && flag2 == 0)
			{
				l = -1;
				n = -580;
				flag2 = 1;
			}
			if (n == 580 && flag2 == 1)
			{
				l = 1;
				n = -580;
				flag2 = 0;
			}
			// perhitungan gerak bola
			glVertex2i((x - l * n), (y - j * m));
		}
		glEnd();

		// kotak besar
		glBegin(GL_LINE_LOOP);
		glVertex2i(-600, -320);
		glVertex2i(-600, 320);
		glVertex2i(600, 320);
		glVertex2i(600, -320);

		glEnd();

		// kotak kecil
		glBegin(GL_LINE_LOOP);
		left = -200 + 200 * (d - c);
		right = 200 + 200 * (d - c);
		glColor3i(21, 5, 13);
		glVertex2i(left, -315);
		glVertex2i(left, -295);
		glVertex2i(right, -295);
		glVertex2i(right, -315);
		glColor3ub(255, 0, 0);
		glEnd();

		// ngecek bola dijaga sama kotak kecil atau enggak
		if ((j * m) == 276)
		{
			if ((left > ((-1 * l * n) + 20)) || (right < (-1 * l * n) - 20))
			{
				printf("Game Over !!!\nYour Score is :\t%d\n", score);
				exit(0);
			}
		}
		glutSwapBuffers();
	}
}



int main(int argc, char** argv)
{
	glutInit(&argc, argv);

	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
	glutInitWindowSize(1100, 600);
	glutInitWindowPosition(0, 0);
	glutCreateWindow("Game");
	// keyboard function 
	glutKeyboardFunc(keyboard);
	myInit();
	glutDisplayFunc(myDisplay);
	glutMainLoop();
}


//gud naig otak :)
